@startuml

'--------------'
'Hidden members'
'--------------'
hide empty members

'-----------'
'Annotations'
'-----------'
annotation SpringBootApplication

'-----------'
'Application'
'-----------'
class SpringApplicationBuilder
class ApplicationRepository <<Singleton>> {
    - {static} application
    + {static} getInstance()
}

class Application {
    - {static} frontendChessboardBuilder
    - {static} gameService
    + {static} main()
    + startApplication()
}

'-----'
'Swing'
'-----'
class JFrame{}
class JButton{}
interface ActionListener{}
interface MouseListener{}

class FrontendChessboard{
    - frontendFields
    - game
    - gameService
    + createGridLayout()
    + mousePressed()
}
class FrontendChessboardBuilder {
    - frontendChessboard
    + initialize()
    + createButtons()
    + updateButtons()
    + build()
}
class FrontendField {
    + update()
    + createButtonId()
    + reset()
}
class GameService {
    + handleButtonClick()
}

'---------'
'Relations'
'---------'
JFrame <|-- FrontendChessboard
JButton <|--- FrontendField
ActionListener <|-- FrontendChessboard
MouseListener <|-- FrontendChessboard
FrontendChessboard o-- GameService : updates game >
FrontendChessboard --* FrontendChessboardBuilder : updates buttons >
FrontendChessboard *-- FrontendField : has >
FrontendChessboardBuilder --* Application : builds FrontendChessboard >
Application ...> SpringBootApplication
Application --* ApplicationRepository : retrieves Spring Application instance >
ApplicationRepository ..> SpringApplicationBuilder : < builds Spring Application instance

'-----'
'Notes'
'-----'
note left of Application::main
    start of Application
end note
note left of FrontendField::update
    updates the graphics
end note

@enduml
